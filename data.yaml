AWSTemplateFormatVersion: '2010-09-09'
Description: 'AWS CloudFormation template that contains a Lambda function behind an API Gateway that has three Stages mapped to three Lambda alias'
Resources:
   GreetingLambda:
      Type: 'AWS::Lambda::Function'
      Properties:
         Code:
            S3Bucket: aadhri-test-buck
            S3Key: test22.zip
            S3ObjectVersion: obj_version_id
         Description: 'A greeting function'
         FunctionName: GreetingLambda
         Handler: index.GreetingLambda
         Role:
            'Fn::GetAtt':
               - LambdaExecutionRole
               - Arn
         Runtime: nodejs4.3
   
   
   GreetingLambdaDevAlias:
      Type: 'AWS::Lambda::Alias'
      Properties:
         FunctionName:
            Ref: GreetingLambda
         FunctionVersion: $LATEST
         Name: DEV
   
   
   GreetingLambdaStageAlias:
      Type: 'AWS::Lambda::Alias'
      Properties:
         FunctionName:
            Ref: GreetingLambda
         FunctionVersion: $LATEST
         Name: STAGE
   
   
   GreetingLambdaProdAlias:
      Type: 'AWS::Lambda::Alias'
      Properties:
         FunctionName:
            Ref: GreetingLambda
         FunctionVersion: $LATEST
         Name: PROD
   
   
   LambdaExecutionRole:
      Type: 'AWS::IAM::Role'
      Properties:
         AssumeRolePolicyDocument:
            Version: '2012-10-17'
            Statement:
               -
                  Effect: Allow
                  Principal:
                     Service:
                        - lambda.amazonaws.com
                  Action:
                     - 'sts:AssumeRole'
         ManagedPolicyArns:
            - 'arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
   
   
   GreetingApi:
      Type: 'AWS::ApiGateway::RestApi'
      Properties:
         Name: 'Greeting API'
         Description: 'API used for Greeting requests'
         FailOnWarnings: true
   
   
   GreetingLambdaDevPermission:
      Type: 'AWS::Lambda::Permission'
      Properties:
         Action: 'lambda:invokeFunction'
         FunctionName:
            Ref: GreetingLambdaDevAlias
         Principal: apigateway.amazonaws.com
         SourceArn:
            'Fn::Join':
               - ""
               -
                  - 'arn:aws:execute-api:'
                  -
                     Ref: 'AWS::Region'
                  - ':'
                  -
                     Ref: 'AWS::AccountId'
                  - ':'
                  -
                     Ref: GreetingApi
                  - '/*'
   
   
   GreetingLambdaStagePermission:
      Type: 'AWS::Lambda::Permission'
      Properties:
         Action: 'lambda:invokeFunction'
         FunctionName:
            Ref: GreetingLambdaStageAlias
         Principal: apigateway.amazonaws.com
         SourceArn:
            'Fn::Join':
               - ""
               -
                  - 'arn:aws:execute-api:'
                  -
                     Ref: 'AWS::Region'
                  - ':'
                  -
                     Ref: 'AWS::AccountId'
                  - ':'
                  -
                     Ref: GreetingApi
                  - '/*'
   
   
   GreetingLambdaProdPermission:
      Type: 'AWS::Lambda::Permission'
      Properties:
         Action: 'lambda:invokeFunction'
         FunctionName:
            Ref: GreetingLambdaProdAlias
         Principal: apigateway.amazonaws.com
         SourceArn:
            'Fn::Join':
               - ""
               -
                  - 'arn:aws:execute-api:'
                  -
                     Ref: 'AWS::Region'
                  - ':'
                  -
                     Ref: 'AWS::AccountId'
                  - ':'
                  -
                     Ref: GreetingApi
                  - '/*'
   
   
   LambdaPermission:
      Type: 'AWS::Lambda::Permission'
      Properties:
         Action: 'lambda:invokeFunction'
         FunctionName:
            'Fn::GetAtt':
               - GreetingLambda
               - Arn
         Principal: apigateway.amazonaws.com
         SourceArn:
            'Fn::Join':
               - ""
               -
                  - 'arn:aws:execute-api:'
                  -
                     Ref: 'AWS::Region'
                  - ':'
                  -
                     Ref: 'AWS::AccountId'
                  - ':'
                  -
                     Ref: GreetingApi
                  - '/*'
   
   
   ApiGatewayCloudWatchLogsRole:
      Type: 'AWS::IAM::Role'
      Properties:
         AssumeRolePolicyDocument:
            Version: '2012-10-17'
            Statement:
               -
                  Effect: Allow
                  Principal:
                     Service:
                        - apigateway.amazonaws.com
                  Action:
                     - 'sts:AssumeRole'
         Policies:
            -
               PolicyName: ApiGatewayLogsPolicy
               PolicyDocument:
                  Version: '2012-10-17'
                  Statement:
                     -
                        Effect: Allow
                        Action:
                           - 'logs:CreateLogGroup'
                           - 'logs:CreateLogStream'
                           - 'logs:DescribeLogGroups'
                           - 'logs:DescribeLogStreams'
                           - 'logs:PutLogEvents'
                           - 'logs:GetLogEvents'
                           - 'logs:FilterLogEvents'
                        Resource: '*'
   
   
   ApiGatewayAccount:
      Type: 'AWS::ApiGateway::Account'
      Properties:
         CloudWatchRoleArn:
            'Fn::GetAtt':
               - ApiGatewayCloudWatchLogsRole
               - Arn
   
   
   GreetingApiDevStage:
      DependsOn:
         - ApiGatewayAccount
      Type: 'AWS::ApiGateway::Stage'
      Properties:
         DeploymentId:
            Ref: ApiDeployment
         MethodSettings:
            -
               DataTraceEnabled: true
               HttpMethod: '*'
               LoggingLevel: INFO
               ResourcePath: '/*'
         RestApiId:
            Ref: GreetingApi
         StageName: dev
         Variables:
            LambdaAlias: DEV
   
   
   GreetingApiStageStage:
      DependsOn:
         - ApiGatewayAccount
      Type: 'AWS::ApiGateway::Stage'
      Properties:
         DeploymentId:
            Ref: ApiDeployment
         MethodSettings:
            -
               DataTraceEnabled: true
               HttpMethod: '*'
               LoggingLevel: INFO
               ResourcePath: '/*'
         RestApiId:
            Ref: GreetingApi
         StageName: stage
         Variables:
            LambdaAlias: STAGE
   
   
   GreetingApiProdStage:
      DependsOn:
         - ApiGatewayAccount
      Type: 'AWS::ApiGateway::Stage'
      Properties:
         DeploymentId:
            Ref: ApiDeployment
         MethodSettings:
            -
               DataTraceEnabled: true
               HttpMethod: '*'
               LoggingLevel: INFO
               ResourcePath: '/*'
         RestApiId:
            Ref: GreetingApi
         StageName: prod
         Variables:
            LambdaAlias: PROD
   
   
   ApiDeployment:
      Type: 'AWS::ApiGateway::Deployment'
      DependsOn:
         - GreetingRequest
      Properties:
         RestApiId:
            Ref: GreetingApi
   
   
   GreetingResource:
      Type: 'AWS::ApiGateway::Resource'
      Properties:
         RestApiId:
            Ref: GreetingApi
         ParentId:
            'Fn::GetAtt':
               - GreetingApi
               - RootResourceId
         PathPart: greeting
   
   
   GreetingRequest:
      DependsOn: LambdaPermission
      Type: 'AWS::ApiGateway::Method'
      Properties:
         AuthorizationType: NONE
         HttpMethod: GET
         Integration:
            Type: AWS
            IntegrationHttpMethod: POST
            Uri:
               'Fn::Join':
                  - ""
                  -
                     - 'arn:aws:apigateway:'
                     -
                        Ref: 'AWS::Region'
                     - ':lambda:path/2015-03-31/functions/'
                     -
                        'Fn::GetAtt':
                           - GreetingLambda
                           - Arn
                     - ':${stageVariables.LambdaAlias}'
                     - /invocations
            IntegrationResponses:
               -
                  StatusCode: 200
            RequestTemplates:
               application/json:
                  'Fn::Join':
                     - ""
                     -
                        - '{'
                        - '  "name": "$input.params(''name'')"'
                        - '}'
         RequestParameters:
            method.request.querystring.name: false
         ResourceId:
            Ref: GreetingResource
         RestApiId:
            Ref: GreetingApi
         MethodResponses:
            -
               StatusCode: 200


Outputs:
   RootUrl:
      Description: 'Root URL of the API gateway'
      Value:
         'Fn::Join':
            - ""
            -
               - 'https://'
               -
                  Ref: GreetingApi
               - .execute-api.
               -
                  Ref: 'AWS::Region'
               - .amazonaws.com
